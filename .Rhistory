library(patchwork)
library(kableExtra)
theme_set(theme_light())
# show_col(hue_pal()(6))
# hue_pal()(6) %>% print()
# shapefiles
pcode3_shape <-
st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
library(sf)
library(DT)
# shapefiles
pcode3_shape <-
st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <-
st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
prices %>% glimpse()
pcode3_shape %>%
st_as_sf() %>%
ggplot() +
geom_sf(size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices, aes(x = longitude, y = latitude), size = 1, colour = "red")
pcode3_shape %>%
st_as_sf() %>%
ggplot() +
geom_sf(size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020),
aes(x = longitude, y = latitude), size = 1, colour = "red") +
theme_void() +
labs("Locations surveyed for commodity prices")
pcode3_shape %>%
st_as_sf() %>%
ggplot() +
geom_sf(size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020),
aes(x = longitude, y = latitude), size = 3, colour = "red") +
theme_void() +
labs("Locations surveyed for commodity prices")
# Conflict score
conflict_score <- read_csv("./data/conflict_score2.csv")
glimpse(conflict_score)
pcode3_shape %>%
left_join(conflict_score %>% select(admin3_pcode, conflict_score), by = conflict_score) %>%
ggplot() +
geom_sf(aes(fill = conflict_score)size = .1) +
pcode3_shape %>%
left_join(conflict_score %>% select(admin3_pcode, conflict_score), by = conflict_score) %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020),
aes(x = longitude, y = latitude), size = 3, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(title = "Locations surveyed for commodity prices")
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020),
aes(x = longitude, y = latitude), size = 3, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(title = "Locations surveyed for commodity prices")
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020),
aes(x = longitude, y = latitude), size = 5, alpha = .5, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(title = "Locations surveyed for commodity prices")+
labs(fill = "Conflict score and locations surveyed for commodity proices",
title = "Conflict score by township",
caption = "Data source: ACLED; acleddata.com") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12))
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020),
aes(x = longitude, y = latitude), size = 5, alpha = .3, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score and locations surveyed for commodity proices",
title = "Conflict score by township and locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12))
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020),
aes(x = longitude, y = latitude), size = 5, alpha = .3, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score",
title = "Conflict score by township and locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12))
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020),
aes(x = longitude, y = latitude), size = 4, alpha = .1, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score",
title = "Conflict score by township and locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12))
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 4, alpha = .1, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score",
title = "Conflict score by township and locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12))
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 4, alpha = .5, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score",
title = "Conflict score by township and locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12))
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 4, alpha = .7, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score",
title = "Conflict score by township and locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12))
# Agriculture date
ag_mali <- read_csv("./data/ag_mali.csv")
ag_mali %>%
group_by(township_pcode) %>%
summarise(area_sown = mean(all_area_sowed_mali)) %>%
select(area_sown, admin3_pcode = township_pcode) %>%
right_join(pcode3_shape, by = "admin3_pcode") %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = area_sown), size = 0.1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 4, alpha = .7, colour = "blue") +
scale_fill_viridis_c(direction = -1, label = scales::comma,
breaks = c(0, 50000, 200000, 400000, 600000, 750000)) +
theme_void() +
labs(fill = "sown area (acres)",
title = "Agricultural area sown and lcoations surveyed for commodity prices",
caption = "Data sources: Ministry of Agriculture and Irrigation and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12)) +
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 4, alpha = .7, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score",
title = "Conflict score by township and locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12))
prices %>% filter(admin1 == "Shan (East)")
ag_mali %>%
group_by(township_pcode) %>%
summarise(area_sown = mean(all_area_sowed_mali)) %>%
select(area_sown, admin3_pcode = township_pcode) %>%
right_join(pcode3_shape, by = "admin3_pcode") %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = area_sown), size = 0.1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 4, alpha = .7, colour = "blue") +
scale_fill_viridis_c(direction = -1, label = scales::comma,
breaks = c(0, 50000, 200000, 400000, 600000, 750000)) +
theme_void() +
labs(fill = "sown area (acres)",
title = "Agricultural area sown and lcoations surveyed for commodity prices",
caption = "Data sources: Ministry of Agriculture and Irrigation and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12, hjust = .5)) +
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 4, alpha = .7, colour = "blue") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score",
title = "Conflict score by township and locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(size = 12, hjust = .5))
prices %>%
filter(pricetype == "Retail") %>%
select(commodity, admin1, admin2, date, price, market, year) %>%
rbind(mau %>% select(-filename)) %>%
filter(year >= 2021 & price > 20) %>%
group_by(date, commodity, admin1, admin2) %>%
summarise(price = mean(price)) %>%
arrange(date, commodity) %>%
group_by(commodity, admin1, admin2) %>%
mutate(mom = (price - lag(price)) / lag(price)) %>%
filter(!is.na(mom))
prices %>%
filter(pricetype == "Retail") %>%
select(commodity, admin1, admin2, date, price, market, year) %>%
rbind(mau %>% select(-filename)) %>%
filter(year >= 2021 & price > 20) %>%
group_by(date, commodity, admin1, admin2) %>%
summarise(price = mean(price)) %>%
arrange(date, commodity) %>%
group_by(commodity, admin1, admin2) %>%
mutate(mom = (price - lag(price)) / lag(price)) %>%
filter(!is.na(mom)) %>%
mutate(mom = round(mom * 100, digits = 2)) %>%
rename(`%change_mom` = mom,
price_MMK = price) %>%
datatable(filter = list(position = "top", clear = FALSE),
options = list(pageLength = 10, scrollX = TRUE),
caption = htmltools::tags$caption(style = "caption-side: top;
text-align: centre;
color: black;
font-size: 140%;",
"Food Prices 2021/01 - 2022/05"))  %>%
formatRound(c("price_MMK"), digits = 0) %>%
formatStyle(0, target = "row", lineHeight = "85%", fontSize = "80%")
prices %>%
filter(pricetype == "Retail") %>%
select(commodity, admin1, admin2, date, price, market, year) %>%
rbind(mau %>% select(-filename)) %>%
filter(year >= 2021 & price > 20) %>%
group_by(date, commodity, admin1, admin2) %>%
summarise(price = mean(price)) %>%
arrange(date, commodity) %>%
group_by(commodity, admin1, admin2) %>%
mutate(mom = (price - lag(price)) / lag(price)) %>%
filter(!is.na(mom)) %>%
mutate(mom = round(mom * 100, digits = 2)) %>%
rename(`%change_from_previous_month` = mom,
price_MMK = price) %>%
datatable(filter = list(position = "top", clear = FALSE),
options = list(pageLength = 10, scrollX = TRUE),
caption = htmltools::tags$caption(style = "caption-side: top;
text-align: centre;
color: black;
font-size: 140%;",
"Food Prices 2021/01 - 2022/05"))  %>%
formatRound(c("price_MMK"), digits = 0) %>%
formatStyle(0, target = "row", lineHeight = "85%", fontSize = "80%")
prices %>%
filter(pricetype == "Retail") %>%
select(commodity, admin1, admin2, date, price, market, year) %>%
rbind(mau %>% select(-filename)) %>%
filter(year >= 2021 & price > 20) %>%
group_by(date, commodity, admin1, admin2) %>%
summarise(price = mean(price)) %>%
arrange(date, commodity) %>%
group_by(commodity, admin1, admin2) %>%
mutate(mom = (price - lag(price)) / lag(price)) %>%
filter(!is.na(mom)) %>%
mutate(mom = round(mom * 100, digits = 2)) %>%
rename(`%change_month` = mom,
price_MMK = price) %>%
datatable(filter = list(position = "top", clear = FALSE),
options = list(pageLength = 10, scrollX = TRUE),
caption = htmltools::tags$caption(style = "caption-side: top;
text-align: centre;
color: black;
font-size: 140%;",
"Food Prices 2021/01 - 2022/05"))  %>%
formatRound(c("price_MMK"), digits = 0) %>%
formatStyle(0, target = "row", lineHeight = "85%", fontSize = "80%")
prices %>%
filter(pricetype == "Retail") %>%
select(commodity, admin1, admin2, date, price, market, year, unit) %>%
rbind(mau %>% select(-filename)) %>%
filter(year >= 2021 & price > 20) %>%
group_by(date, commodity, admin1, admin2, unit) %>%
summarise(price = mean(price)) %>%
arrange(date, commodity) %>%
group_by(commodity, admin1, admin2, unit) %>%
mutate(mom = (price - lag(price)) / lag(price)) %>%
filter(!is.na(mom)) %>%
mutate(mom = round(mom * 100, digits = 2)) %>%
rename(`%change_month` = mom,
price_MMK = price) %>%
datatable(filter = list(position = "top", clear = FALSE),
options = list(pageLength = 10, scrollX = TRUE),
caption = htmltools::tags$caption(style = "caption-side: top;
text-align: centre;
color: black;
font-size: 140%;",
"Food Prices 2021/01 - 2022/05"))  %>%
formatRound(c("price_MMK"), digits = 0) %>%
formatStyle(0, target = "row", lineHeight = "85%", fontSize = "80%")
prices %>%
filter(pricetype == "Retail") %>%
select(commodity, admin1, admin2, date, price, market, year) %>%
rbind(mau %>% select(-filename)) %>%
filter(year >= 2021 & price > 20) %>%
group_by(date, commodity, admin1, admin2) %>%
summarise(price = mean(price)) %>%
arrange(date, commodity) %>%
group_by(commodity, admin1, admin2) %>%
mutate(mom = (price - lag(price)) / lag(price)) %>%
filter(!is.na(mom)) %>%
mutate(mom = round(mom * 100, digits = 2)) %>%
rename(`%change_month` = mom,
price_MMK = price) %>%
datatable(filter = list(position = "top", clear = FALSE),
options = list(pageLength = 10, scrollX = TRUE),
caption = htmltools::tags$caption(style = "caption-side: top;
text-align: centre;
color: black;
font-size: 140%;",
"Food Prices 2021/01 - 2022/05"))  %>%
formatRound(c("price_MMK"), digits = 0) %>%
formatStyle(0, target = "row", lineHeight = "85%", fontSize = "80%")
ag_mali %>%
group_by(township_pcode) %>%
summarise(area_sown = mean(all_area_sowed_mali)) %>%
select(area_sown, admin3_pcode = township_pcode) %>%
right_join(pcode3_shape, by = "admin3_pcode") %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = area_sown), size = 0.1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 1.5, alpha = .7, colour = "#0099FF") +
scale_fill_viridis_c(direction = -1, label = scales::comma,
breaks = c(0, 50000, 200000, 400000, 600000, 750000)) +
theme_void() +
labs(fill = "sown area (acres)",
title = "Agricultural area sown by township",
subtitle = "And locations surveyed for commodity prices",
caption = "Data sources: Ministry of Agriculture and Irrigation and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(hjust = .5)) +
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 1.5, alpha = .7, colour = "#0099FF") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score",
title = "Conflict score by township",
subtitle = "And locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.5),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(hjust = .5))
ag_mali %>%
group_by(township_pcode) %>%
summarise(area_sown = mean(all_area_sowed_mali)) %>%
select(area_sown, admin3_pcode = township_pcode) %>%
right_join(pcode3_shape, by = "admin3_pcode") %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = area_sown), size = 0.1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 1.5, alpha = .7, colour = "#0000FF") +
scale_fill_viridis_c(direction = -1, label = scales::comma,
breaks = c(0, 50000, 200000, 400000, 600000, 750000)) +
theme_void() +
labs(fill = "sown area (acres)",
title = "Agricultural area sown by township",
subtitle = "and locations surveyed for commodity prices",
caption = "Data sources: Ministry of Agriculture and Irrigation and WFP") +
theme(plot.caption=element_text(hjust = 0.7),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(hjust = .5)) +
pcode3_shape %>%
left_join(conflict_score %>%
select(admin3_pcode, conflict_score),
by = "admin3_pcode") %>%
ggplot() +
geom_sf(aes(fill = conflict_score), size = .1) +
geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .5) +
geom_point(data = prices %>%
filter(year >= 2020) %>%
distinct(longitude, latitude),
aes(x = longitude, y = latitude), size = 1.5, alpha = .7, colour = "#0000FF") +
scale_fill_viridis(option = "magma", direction = -1) +
theme_void() +
labs(fill = "Conflict score",
title = "Conflict score by township",
subtitle = "and locations surveyed for commodity prices",
caption = "Data sources: ACLED (acleddata.com) and WFP") +
theme(plot.caption=element_text(hjust = 0.7),
plot.background = element_rect(fill = "white", colour = NA),
plot.title = element_text(hjust = .5))
