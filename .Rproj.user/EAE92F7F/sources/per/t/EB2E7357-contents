---
title: "Brief Analysis of Food Prices in Myanmar"
author: "Myanmar Food Security Cluster"
date: "19/07/2022"
output: 
  html_document:
    code_download: true
    theme: readable
    toc: true
    toc_depth: 4
    toc_float: true
    number_sections: false
    collapsed: false
always_allow_html: true  
---

```{css, echo=FALSE}

#TOC::before {
  content: "";
  display: block;
  height: 70px;
  margin: 2em 20px 40px 20px;
  background-image: url("Myanmar_cluster_blue.png");
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}
```

```{=html}
<style>
    body .main-container {
        max-width: 1280px;
    }
</style>
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.width = 9, message = FALSE, warning = FALSE)

library(tidyverse) 
library(lubridate)
library(viridis)
library(scales)
library(data.table)
library(janitor)
library(patchwork)
library(kableExtra)
library(sf)
library(DT)

theme_set(theme_light())

# show_col(hue_pal()(6)) 
# hue_pal()(6) %>% print()

```

[Food Security Cluster Myanmar homepage](https://food-security-cluster-myanmar.github.io/)

<br><br>

## About the data 

This report makes use of food price monitoring data from [WFP](https://data.humdata.org/dataset/wfp-food-prices-for-myanmar?force_layout=desktop) and [Mercy Corps' Market Analysis Unit (MAU)](http://themimu.info/market-analysis-unit). Data collection for WFP began in 2008 and is regularly updated. MAU data has been used to supplement this dataset and is more focused on the southeast.

Not all commodities whose prices have been collected have been analysed as there are insufficient observations for many food and non-food commodities. An important next step would be to cross-reference this data with environmental conditions, supply chain data and information on conflict and humanitarian access. 

```{r datasets}
prices <- read_csv("./data/wfp_food_prices_mmr.csv") %>% 
  filter(!row_number() %in% c(1)) %>% 
  mutate_at(vars(longitude, latitude, price, usdprice),
            ~ as.numeric(.x)) %>% 
  mutate(date = ymd(date), 
         year = year(date)) %>% 
  mutate(source = "WFP")

# I wish I could do this whole process with something like
# mau <- dir("data, full.names = TRUE) %>% map_df(read_csv)
# But unfortunately, these files require some cleaning 

mau_files <- list.files("./data/mpr_se_data")

# Empty vector to store results 

mau_list <- vector("list", length(mau_files))

# The for loop for cleaning and merging 

for(i in 1:length(mau_files)) {
  
 mau_list[[i]] <- read_csv(paste0("./data/mpr_se_data/", mau_files[i])) %>%
   clean_names() %>%
   rename(commodity = x1) %>%
   # Note that you can't just specify column types since the number of 
   # columns is not consistent across the files
   mutate_at(vars(-c(commodity, category)), ~ as.numeric(.x)) %>%
   pivot_longer(-c(commodity, category), 
         names_to = "location", values_to = "price") %>% 
   mutate(filename = paste0(mau_files[i]),
          date = str_remove(filename, "MPR_SE_"),
          date = str_remove(date, ".csv"), 
          date = ym(date) + days(14), 
          location = str_to_title(location)) %>% 
   filter(!is.na(price)) %>% 
   # Converting viss into kg
   mutate(price = ifelse(str_detect(commodity, "viss"), price * 1.63293, price),
          commodity = str_replace(commodity, "viss", "kg"))
 
 mau <- bind_rows(mau_list) %>%
   rename(admin2 = location) %>% 
   left_join(prices %>% select(admin1, admin2), by = "admin2") %>% 
   mutate(admin1 = case_when(admin2 == "Hpapun" ~ "Kayin", 
                            admin2 == "Taungoo" ~ "Bago", 
                            admin2 == "Hpruso" ~ "Kayah", 
                            TRUE ~ admin1)) %>%
   distinct(commodity, admin1, admin2, price, date, filename) %>% 
   mutate(commodity = recode(commodity, 
                            "Cheaper Rice (1 kg)" = "Rice (low quality)", 
                            "Palm Oil (1 liter)" = "Oil (palm)", 
                            "Pulse (1 kg)" = "Pulses", 
                            "Onion (1 kg)" = "Onions (local)", 
                            "Chicken (1 kg)" = "Meat (chicken)"), 
         market = NA_real_, 
         year = year(date))
    
}

# shapefiles
pcode3_shape <- 
  st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
  rename(state = ST, 
        admin1_pcode = ST_PCODE,
        township = TS,
        admin3_pcode = TS_PCODE) %>% 
 mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))

pcode1_shape <- 
  st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
  rename(state = ST, 
        admin1_pcode = ST_PCODE) %>% st_as_sf()

# Conflict score
conflict_score <- read_csv("./data/conflict_score2.csv")

# Agriculture date 
ag_mali <- read_csv("./data/ag_mali.csv")
```

<br><br><br>

## 1. Price increases

### 1.1 Food prices vs. inflation

Inflation in food commodities has largely outstripped the overall pace of inflation in Myanmar as a whole. In the plot below, commodities which have been sufficiently measured (more than 1,000 observations between 2020 and the present), the bars are coloured on the number of observations where prices have increased more than 1% a month -- for reference, this is roughly equivalent to the official inflation rate of 12.63% (Central Statistics Organisation) for the whole of 2021. 

Price increases are particularly predominant in palm oil. Tomatoes were the only commodity to have not experienced overall price increases beyond Myanmar's inflation rate; however, as will be examined, its prices have undergone significant volatility. 

<br>

```{r inflation-vs-food}
prices %>% 
  filter(pricetype == "Retail") %>% 
  select(commodity, admin1, admin2, date, price, market, year) %>% 
  rbind(mau %>% select(-filename)) %>% 
  filter(year >= 2021) %>%  
  group_by(commodity) %>% 
  mutate(count = sum(!is.na(commodity))) %>% 
  ungroup() %>% 
  filter(price > 20) %>%
  group_by(date, commodity, admin2, admin1) %>% 
  summarise(price = mean(price)) %>% 
  arrange(date, commodity) %>% 
  group_by(commodity, admin2) %>% 
  mutate(mom = (price - lag(price)) / lag(price)) %>%
  filter(!is.na(mom) & mom < .5 & mom > -.5) %>% 
  summarise(mom = mean(mom, na.rm = TRUE),
            price = mean(price, na.rm = TRUE)) %>% 
  filter(!is.nan(mom)) %>%
  filter(commodity %in% c("Salt", "Tomatoes (local)", "Rice (low quality)",
                          "Pulses", "Oil (palm)", "Onions (local)")) %>%
  mutate(increase = ifelse(mom > 0.01, "yes", "no"),) %>% 
  group_by(commodity, increase) %>% 
  summarise(count = n()) %>%
  ggplot(aes(x = count, y = commodity, fill = fct_rev(increase), group = increase)) + 
  geom_col(position = position_dodge(width = .9)) + 
  scale_fill_manual(values = c("#F4511E", "#26C6DA")) + 
  labs(x = "Number of observations (aggregated at district per month)", 
       y = "", 
       fill = "Price\nincreased\n>1% per \nmonth", 
       title = "Food prices increased more than country's inflation rate between 2021/01 - 2022/05", 
       subtitle = "Only commonly surveyed commodities; price changes aggregated at district level", 
       caption = "Data sources: WFP and Mercy Corps MAU") + 
  theme(plot.caption = element_text(hjust = .5))
  
```

<br>

The table below summarises, by commodity, the average month-on-month increase in prices. However, these are just countrywide averages and not representative of the range of price shocks and stresses experienced throughout the country. In particular, though tomato prices have experienced a high rate of increase, this average actually esconds the true nature of the problem. It is best to use the table below as a simple reference. 

<br>

```{r table-commodities-mom}
prices %>% 
  filter(pricetype == "Retail") %>% 
  select(commodity, admin1, admin2, date, price, market, year) %>% 
  rbind(mau %>% select(-filename)) %>% 
  filter(year >= 2021 & price > 20) %>%  
  group_by(date, commodity, admin1, admin2) %>% 
  summarise(price = mean(price)) %>% 
  arrange(date, commodity) %>% 
  group_by(commodity, admin1, admin2) %>% 
  mutate(mom = (price - lag(price)) / lag(price)) %>%  
  filter(!is.na(mom)) %>%
  filter(commodity %in% c("Salt", "Tomatoes (local)", "Rice (low quality)", 
                          "Pulses", "Oil (palm)", "Onions (local)")) %>% 
  group_by(commodity) %>% 
  summarise(mom = round(mean(mom, na.rm = TRUE) * 100, digits = 2)) %>% 
  rename(`%month_on_month_change` = mom) %>% 
  mutate(commodity = fct_reorder(commodity, -`%month_on_month_change`)) %>%
  # Somehow it needs the arrange function for the fct_reorder to appear
  arrange(commodity) %>% 
  kable(caption = "Average month-on-month increase in prices\n2021/01 - 2022/05") %>% 
  kable_classic_2("striped", position = "left", full_width = FALSE) %>% 
  footnote("Data sources: WFP and Mercy Corps MAU", 
           general_title = "")

```

<br><br>


### 1.2 Food prices over time

Once aggregated at state level, Shan East is visibly an area of concern, having experienced the largest or near-the-largest price increases in salt, rice, tomatoes, pulses and onions. Whilst price shocks are prevalent across the entire country, the situation does not appear to be as severe in Bago. 

Additionally, given the trends in rice prices, it is probable that the earnings of rice producers, the largest group of farmers in Myanmar, have not been able to keep up with price increases in other key food commodities. 

<br>


```{r facet-increase-commodity, fig.height=7}
prices %>% 
  filter(pricetype == "Retail") %>% 
  select(commodity, admin1, admin2, date, price, market, year) %>% 
  rbind(mau %>% select(-filename)) %>% 
  filter(year >= 2020) %>%  
  group_by(commodity) %>% 
  mutate(count = sum(!is.na(commodity))) %>% 
  ungroup() %>% 
  filter(count > 500 & price > 20) %>%
  group_by(date, commodity, admin1) %>% 
  summarise(price = mean(price)) %>% 
  filter(commodity %in% c("Salt", "Tomatoes (local)", "Rice (low quality)", 
                          "Pulses", "Oil (palm)", "Onions (local)")) %>% 
  group_by(commodity, admin1) %>% 
  arrange(date) %>% 
  filter(row_number() == 1 | row_number() == n()) %>%
  mutate(order = c("first", "last")) %>%
  select(-date) %>% 
  pivot_wider(names_from = order, values_from = price) %>% 
  mutate(difference = (last - first) / first, 
         # this changes the anomalous value for salt in Shan East
         difference = ifelse(difference > 2.5, 2.5, difference)) %>%
  ggplot(aes(x = difference, y = fct_rev(admin1), fill = commodity)) + 
  geom_vline(xintercept = 1, lty = 2, colour = "red") +
  geom_col(position = position_dodge(width = .9)) + 
  facet_wrap(~commodity) +
  scale_fill_manual(values = c("#4686fbff", "#26A69A", "#30123bff",
                               "#e4460aff", "#e4cf5bff", "#9c179eff")) +
  scale_x_continuous(labels = percent, breaks = seq(-1, 2.5, by = .5)) +
    theme(legend.position = "none",
          strip.text = element_text(size = 10, face = "bold"),
          strip.background = element_rect(fill = "#212121"),
          axis.text.x = element_text(size = 7)) + 
  guides(colour = guide_legend(nrow = 1)) +
  labs(x = "% change in prices since 2020", y = "",  
       title = "Changes in commodity prices, 2020-2022",
       subtitle = "Prices are MMK per kg, except for palm oil which is MMK per litre; red line indicates a 100% increase",
       caption = "Data sources: WFP and Mercy Corps MAU") 
  
```

<br>

The plots below are now faceted by state, with the date on the x-axis and prices in MMK on the y-axis. To recall what was mentioned earlier about tomatoes,their prices have largely declined overall in comparison to their value in 2020 in spite of experiencing severe month-on-month price increases. The plot below makes clear why that is -- their prices are extremely volatile, ramping up dramatically, then crashing. 

Price shocks can be observed here by looking at spikes in each of the lines. While stress is indicated by an overall uptrend in the line. Sagaing and Kayah are notable for their large and constant price shocks, with food prices spiking repeatedly. Shan North would be an example of an area under constant stress, with food prices constantly increasing. 

<br>


```{r food-prices-facet, fig.height=7}
prices %>% 
  filter(pricetype == "Retail") %>% 
  select(commodity, admin1, admin2, date, price, market, year) %>% 
  rbind(mau %>% select(-filename)) %>% 
  filter(year >= 2020) %>%  
  group_by(commodity) %>% 
  mutate(count = sum(!is.na(commodity))) %>% 
  ungroup() %>% 
  filter(count > 500 & price > 20) %>%
  group_by(date, commodity, admin1) %>% 
  summarise(price = mean(price)) %>% 
  filter(commodity %in% c("Salt", "Tomatoes (local)", "Rice (low quality)",  
                          "Pulses", "Oil (palm)", "Onions (local)")) %>% 
  mutate(commodity = recode(commodity, "Eggs (local)" = "10 Eggs (local)")) %>% 
  ggplot(aes(x = date, y = price, colour = commodity, group = commodity)) +
  geom_line(size = .5) + 
  facet_wrap(~ admin1) +
  scale_x_date(breaks = "1 year", date_labels = "%Y") + 
  scale_colour_manual(values = c("#4686fbff", "#26A69A", "#30123bff", 
                                 "#e4460aff", "#e4cf5bff", "#9c179eff")) +
  scale_y_continuous(labels = comma) + 
  labs(x = "", y = "Price in MMK", colour = "", 
       title = "Average food commodity prices per state, 2020-2022",
       subtitle = "Prices are MMK per kg, except for palm oil which is MMK per litre",
       caption = "Data sources: WFP and Mercy Corps MAU") + 
  theme(legend.position = "top", 
        strip.text = element_text(size = 8.5, face = "bold"), 
        strip.background = element_rect(fill = "#212121")) + 
  guides(colour = guide_legend(nrow = 1))
  

```

<br>

Palm oil is most expensive in Sagaing, though all areas have experienced significant price increases. In addition to tomatoes, palm oil and pulses have also experienced significant price volatility, which will be discussed in the next section. 

<br><br><br>


## 2. Price shocks and volatility

Price volatility, represented below by the standard deviation in prices, has been most pronounced amongst palm oil, pulses and tomatoes, with tomatoes displaying particularly extreme volatility in 2022. 

It is currently unclear whether this is due to its nature as a crop or whether this has been a general trend amongst other fruits and vegetables. Onions, which were one of the few other commodities whose prices have been measured sufficiently, has only displayed price fluctuations similar to tomatoes in Kayah and Shan North.  

The boxplots below rank commodities in order of the standard deviations in their prices, with higher standard deviations indicating higher volatility. The solid black line in the centre of each of the coloured boxes indicates the standard deviation, with the box showing the upper and lower bounds. 

<br>

```{r fig.height=6}
prices %>% 
  filter(pricetype == "Retail" & unit %in% c("KG", "L")) %>% 
  select(commodity, admin1, admin2, date, price, market, year) %>% 
  rbind(mau %>% select(-filename)) %>% 
  filter(year >= 2021) %>%  
  group_by(commodity) %>% 
  mutate(count = sum(!is.na(commodity))) %>% 
  ungroup() %>% 
  filter(price > 20) %>%
  group_by(date, commodity, admin2, admin1) %>% 
  mutate(sd = sd(price, na.rm = TRUE)) %>% 
  ungroup() %>% 
  mutate(count = ifelse(!is.na(commodity), 1, 0)) %>% 
  filter(!is.na(sd)) %>%
  filter(commodity %in% c("Salt", "Tomatoes (local)", "Rice (low quality)", 
                          "Pulses", "Oil (palm)", "Onions (local)")) %>%
  mutate(commodity = fct_reorder(commodity, sd)) %>%  
  ggplot(aes(x = sd, y = commodity, fill = commodity)) + 
  geom_boxplot(outlier.alpha = 0.5) + 
  scale_x_log10() + 
  theme(legend.position = "none", 
        strip.text = element_text(size = 10, face = "bold"), 
        strip.background = element_rect(fill = "#212121")) + 
  facet_wrap(~ year, nrow = 2) + 
  labs(x = "Standard deviation", 
       y = "", 
       title = "Price volatility amongst commonly surveyed commodities",
       caption = "Data sources: WFP and Mercy Corps MAU")

```

<br>

Below, volatility is plotted against price. For most commodities, price volatility was higher in 2022 than in 2021, indicated by the lines trending higher. Higher prices are somewhat associated with higher price volatility, though palm oil, rice in 2021 and tomatoes in 2022 experienced significant price volatility as prices became lower as well. The dips in each of the lines, usually where most of the points are clustered, roughly indicates the range in which prices are more stable. 

<br>

```{r volatility-facet, fig.height=7}

prices %>% 
  filter(pricetype == "Retail" & unit %in% c("KG", "L")) %>% 
  select(commodity, admin1, admin2, date, price, market, year) %>% 
  rbind(mau %>% select(-filename)) %>% 
  filter(year >= 2021) %>%  
  group_by(commodity) %>% 
  mutate(count = sum(!is.na(commodity))) %>% 
  ungroup() %>% 
  filter(price > 20) %>%
  group_by(date, commodity, admin2, admin1) %>% 
  mutate(sd = sd(price, na.rm = TRUE) * 100) %>% 
  ungroup() %>% 
  mutate(count = ifelse(!is.na(commodity), 1, 0)) %>% 
  filter(!is.na(sd)) %>%
  filter(commodity %in% c("Salt", "Tomatoes (local)", "Rice (low quality)", 
                          "Pulses", "Oil (palm)", "Onions (local)")) %>%
  mutate(com_year = paste0(commodity, " - ", year)) %>%
  ggplot(aes(x = price, y = sd, colour = commodity)) + 
  geom_jitter(alpha = .025) + 
  scale_x_log10(labels = comma, 
                breaks = c(0, 100, 300, 1000, 3000, 9000)) + 
  scale_y_log10() +  
  scale_colour_manual(values = c("#F564E3", "#00BA38", "#619CFF", 
                               "#F8766D", "#B79F00", "#00BFC4")) + 
  geom_smooth(method = "loess", 
              se = FALSE, 
              size = .7) +
  facet_wrap(~ com_year) + 
  labs(x = "Price in MMK", 
       y = "Standard deviation", 
       colour = "", 
       title = "Price volatility amongst commonly surveyed commodities", 
       subtitle = "Points are observations at individual markets", 
       caption = "Data sources: WFP and Mercy Corps MAU") +
  theme(legend.position = "none", 
        axis.text.x = element_text(angle = 60, hjust = 1), 
        strip.text = element_text(size = 10, face = "bold"), 
        strip.background = element_rect(fill = "#212121"))

```

<br><br><br>

## 3. Maps and reference tables

### 3.1 Reference maps 

Ayeyarwady, Bago, Shan South and lower Sagaing have not been covered by food price monitoring. It is unclear if WFP or Mercy Corps' Market Analysis Unit have the capacity to expand into these areas. But Ayeyarwady and lower Sagaing remain of extreme interest to the response for both their massive agricultural output and, in the case of Sagaing, its grave exposure to conflict. 

For more information on the conflict score, please refer to the Food Security Cluster's report [Understanding Conflict Dynamics in Myanmar](https://food-security-cluster-myanmar.github.io/exploratory-data-analysis-acled-fsc/). 

<br>

```{r patchwork maps, fig.height=8.5}

ag_mali %>% 
  group_by(township_pcode) %>% 
  summarise(area_sown = mean(all_area_sowed_mali)) %>% 
  select(area_sown, admin3_pcode = township_pcode) %>% 
  right_join(pcode3_shape, by = "admin3_pcode") %>% 
  st_as_sf() %>%
  ggplot() +
  geom_sf(aes(fill = area_sown), size = 0.1) + 
  geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .4) +
  geom_point(data = prices %>% 
               filter(year >= 2020) %>% 
               distinct(longitude, latitude), 
             aes(x = longitude, y = latitude), size = 1.5, alpha = .6, colour = "#0000FF") + 
  scale_fill_viridis_c(direction = -1, label = scales::comma, 
                       breaks = c(0, 50000, 200000, 400000, 600000, 750000)) +
  theme_void() + 
  labs(fill = "sown area (acres)", 
       title = "Agricultural area sown by township",
       subtitle = "Blue dots are markets where prices were surveyed", 
       caption = "Data sources: Ministry of Agriculture and Irrigation and WFP") +
  theme(plot.caption=element_text(hjust = 0.5),
        plot.background = element_rect(fill = "white", colour = NA),
        plot.title = element_text(hjust = .5), 
        plot.subtitle = element_text(hjust = .5)) + 

pcode3_shape %>% 
  left_join(conflict_score %>% 
              select(admin3_pcode, conflict_score), 
            by = "admin3_pcode") %>% 
  ggplot() + 
  geom_sf(aes(fill = conflict_score), size = .1) + 
  geom_sf(data = pcode1_shape, alpha = 0, colour = "black", size = .4) + 
  geom_point(data = prices %>% 
               filter(year >= 2020) %>% 
               distinct(longitude, latitude), 
             aes(x = longitude, y = latitude), size = 1.5, alpha = .6, colour = "#0000FF") + 
  scale_fill_viridis(option = "magma", direction = -1) + 
  theme_void() + 
  labs(fill = "Conflict score", 
       title = "Conflict score by township",
       subtitle = "Blue dots are markets where prices were surveyed", 
       caption = "Data sources: ACLED (acleddata.com) and WFP") +
  theme(plot.caption=element_text(hjust = 0.5),
        plot.background = element_rect(fill = "white", colour = NA),
        plot.title = element_text(hjust = .5), 
        plot.subtitle = element_text(hjust = .5))

```

<br><br>

### 3.2 Interactive reference table 

```{r DT}
prices %>% 
  filter(pricetype == "Retail") %>% 
  select(commodity, admin1, admin2, date, price, market, year) %>% 
  rbind(mau %>% select(-filename)) %>% 
  filter(year >= 2021 & price > 20) %>%  
  group_by(date, commodity, admin1, admin2) %>% 
  summarise(price = mean(price)) %>% 
  arrange(date, commodity) %>% 
  group_by(commodity, admin1, admin2) %>% 
  mutate(mom = (price - lag(price)) / lag(price)) %>%  
  filter(!is.na(mom)) %>% 
  mutate(mom = round(mom * 100, digits = 2)) %>% 
  rename(`%change_month` = mom, 
         price_MMK = price) %>% 
  datatable(filter = list(position = "top", clear = FALSE), 
            options = list(pageLength = 10, scrollX = TRUE), 
            caption = htmltools::tags$caption(style = "caption-side: top;
                                              text-align: centre; 
                                              color: black; 
                                              font-size: 140%;", 
                                              "Food Prices 2021/01 - 2022/05"))  %>% 
  formatRound(c("price_MMK"), digits = 0) %>% 
  formatStyle(0, target = "row", lineHeight = "85%", fontSize = "75%")
  

```


<br><br><br>